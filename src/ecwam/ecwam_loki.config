[default]
mode = "idem"
role = "kernel"
expand =  true
strict =  true
replicate = true

# Ensure that we are never adding these to the tree, and thus
# do not attempt to look up the source files for these.
disable = [
  'yomhook', 'abor1', 'abort1', 'gstats', 'yowgstats', 'wam_user_clock',
  'parkind1', 'propag_wam', 'newwind', 'oml_mod', 'field_module', 'incdate', 'yowfield_mod',
  'ieee_arithmetic',  # intrinsic modules (should have INTRINSIC in their USE statement)
  'mfeb_length', 'cdm', # internal functions
  'outwspec_io_serv_handler', 'outint_io_serv_handler', 'ifstowam_handler', # procedure pointers
]

# modules to be parsed but not transformed
ignore = ['yowgrid', 'yowtest', 'yowshal', 'yowdrvtype']

# Prune the tree for these to ensure they are not processed by transformations
block = ['ec_parkind', 'parkind_wave']

# Utility calls and IO statements to remove
[transformations.RemoveCodeTransformation]
  module = "loki.transformations"
[transformations.RemoveCodeTransformation.options]
  remove_marked_regions = true
  remove_dead_code = false
  call_names =['dr_hook', 'abort1']
  intrinsic_names = ['write(iu06']
  kernel_only = true

# Inline transformation
[transformations.InlineTransformation]
  module = "loki.transformations"
[transformations.InlineTransformation.options]
  allowed_aliases = "IJ"
  inline_elementals = false

# Split-read-write transformation
[transformations.SplitReadWriteTransformation]
  module = "loki.transformations"
[transformations.SplitReadWriteTransformation.options]
  dimensions = "%dimensions.horizontal%"

# TemporariesPoolAllocatorTransformation
[transformations.TemporariesPoolAllocatorTransformation]
  module = "loki.transformations"
[transformations.TemporariesPoolAllocatorTransformation.options]
  horizontal = "%dimensions.horizontal%"
  directive = "openmp"
  block_dim = "%dimensions.block_dim%"
  check_bounds = true

# ModuleWrap transformation
[transformations.ModuleWrapTransformation]
  module = "loki.transformations"
[transformations.ModuleWrapTransformation.options]
  module_suffix = "_MOD"

# Dependency transformation
[transformations.DependencyTransformation]
  module = "loki.transformations"
[transformations.DependencyTransformation.options]
  module_suffix = "_MOD"
  suffix = "_LOKI"

# Idem transformation
[transformations.IdemTransformation]
  module = "loki.transformations"

# loki pipelines
[pipelines.idem]
  transformations = [
  'RemoveCodeTransformation', 'SplitReadWriteTransformation', 'InlineTransformation', 
  'IdemTransformation', 'ModuleWrapTransformation', 'DependencyTransformation'
]

[pipelines.idem-stack]
  transformations = [
  'RemoveCodeTransformation', 'SplitReadWriteTransformation', 'InlineTransformation', 'IdemTransformation', 
  'TemporariesPoolAllocatorTransformation', 'ModuleWrapTransformation', 'DependencyTransformation'
]

# Define entry point for call-tree transformation
[routines.wamintgr]
  role = "driver"
  expand = true
  replicate = false
  real_kind = 'JWRB'
 
# add inline function calls here to force the plan to add them
[routines.chnkmin]
[routines.ns_gc]
[routines.stress_gc]
[routines.transf_snl]
[routines.transf]
[routines.aki_ice]

# we add loki inlined routines here to force them to be created
[routines.femeanws]
[routines.frcutindex]
[routines.omegagc]
[routines.tau_phi_hf]
[routines.stresso]
[routines.wsigstar]
[routines.sinput]
[routines.sinput_ard]
[routines.sinput_jan]
[routines.taut_z0]
[routines.z0wave]
[routines.airsea]
[routines.femean]
[routines.meansqs_lf]
[routines.halphap]
[routines.wnfluxes]
[routines.sdiwbk]
[routines.sbottom]
[routines.fkmean]
[routines.imphftail]
[routines.setice]
[routines.stokestrn]
[routines.stokesdrift]
[routines.cimsstrn]
[routines.semean]
[routines.sdepthlim]
[routines.ciwabr]
[routines.sinflx]
[routines.sdissip_ard]
[routines.sdissip_jan]
[routines.sdissip]
[routines.peak_ang]

# Define indices and bounds for array dimensions
[dimensions.horizontal]
  size = "KIJL"
  index = "IJ"
  bounds = ["KIJS", "KIJL"]
  aliases = ["NPROMA_WAM"]

[dimensions.block_dim]
  size = "NCHNK"
  index = "ICHNK"
